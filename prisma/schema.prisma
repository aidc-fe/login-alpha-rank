generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  from          String?
  password      String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  shop              String?
  shopDisplayName   String?
  userName          String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  name       String?
  password   String?
  type       String?
  used       DateTime?
  targetUrl  String?

  @@unique([identifier, token])
}


model Client {
  id            String   @id @default(cuid())
  client_id     String   @unique
  client_secret String
  redirect_uris String
  grant_types   String
  scope         String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  active        Boolean
  name          String
  description   String
}

model AuthorizationCode {
  code         String   @id
  client_id    String   // 假设为外键
  redirect_uri String
  expires_at   DateTime
  created_at   DateTime @default(now())
  used         DateTime?
}


model AccessToken {
  token         String   @id
  client_id     String   // 假设为外键
  expires_at    DateTime
  created_at    DateTime @default(now())
  refresh_token String
}

model RefreshToken {
  token       String   @id
  client_id   String   // 假设为外键
  expires_at  DateTime
  created_at  DateTime @default(now())
}